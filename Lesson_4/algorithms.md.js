// 1 задание
// Натуральное число, большее 1, называется простым, если оно ни на что не делится, кроме себя и 1.
// Другими словами, n>1 – простое, если при делении на любое число от 2 до n-1 есть остаток.
// Создайте код, который выводит все простые числа из интервала от 2 до 10. Результат должен быть: 2,3,5,7.
// P.S. Код также должен легко модифицироваться для любых других интервалов.
function getNumber (num1, num2) {
    if (num1 < num2) {
        cycle:
            for (var i = num1; i <= num2; i++) {

                for (var n = num1; n < i; n++) {
                    if (i % n == 0) continue cycle;
                }

                console.log(i); // простое
            }

    } else {
        cycle2:
            for (var j = num2; j <= num1; j++) {

                for (var k = num2; k < j; k++) {
                    if (j % k == 0) continue cycle2;
                }

                console.log(j); // простое
            }
    }
}
getNumber(10,2)//2,3,5,7.


// 2 задание
// В объекте есть свойство className, которое содержит список «классов» – слов, разделенных пробелом:
 var obj = {
     className: 'open menu'
     }
// Создайте функцию addClass(obj, cls), которая добавляет в список класс cls, но только если его там еще нет:

function addClass(obj, cls) {
    var arr = obj.className.split(' ');//разделяем по пробелу список классов
    for (var i = 0; i < arr.length; i++) {
        if (arr[i] == cls) return;//проверяем есть ли уже cls
    }
    arr.push(cls.trim());//записываем если предыдущая строка кода false+добавляем удаление лишних пробелов
    obj.className = arr.join(' ');//соединяем в строку
}
addClass(obj, 'open'); // без изменений (класс уже существует)
addClass(obj, 'me'); // obj.className='open menu new me'
addClass(obj, 'cls')
alert( obj.className ); // "open menu new me"
//P.S. Ваша функция не должна добавлять лишних пробелов.


// 3 задание
// У объекта есть свойство className, которое хранит список «классов» – слов, разделенных пробелами:
   var obj = {
       className: 'open menu'
   };
// Напишите функцию removeClass(obj, cls), которая удаляет класс cls, если он есть:
function removeClass(obj, cls) {

    var cls = cls.trim();//чтобы убрать пробелы
    var arr = obj.className.split(' ');//разделяем по пробелу

    for (var i = 0; i < arr.length; i++) {
        if (arr[i] == cls){
            arr.splice(i, 1); // удалить класс
            i--;//чтобы начать проверку с предыдущего елемента,поскольку был удален класс все остальные сдвинулись
        }
    }
    obj.className = arr.join(' ');
}
removeClass(obj, 'open');
alert( obj.className ); // obj.className='menu'

removeClass(obj, 'blabla');// без изменений (нет такого класса)
alert( obj.className ); // obj.className='menu'

// P.S. Дополнительное усложнение. Функция должна корректно обрабатывать дублирование класса в строке:
obj = {
    className: 'my menu menu'
};
removeClass(obj, 'menu');
alert( obj.className );// 'my'
// Лишних пробелов после функции образовываться не должно.



// 4 задание
// Напишите код, который:
// Запрашивает по очереди значения при помощи prompt и сохраняет их в массиве.
// Заканчивает ввод, как только посетитель введёт пустую строку, не число или нажмёт «Отмена».
// При этом ноль 0 не должен заканчивать ввод, это разрешённое число. Выводит сумму всех значений массива когда ввод прекращен.
var numbers = [];
var enter = prompt("Enter value");// Запрашивает по очереди значения при помощи prompt
   while (enter !== " " && enter !== null  && !isNaN(+enter)) {// Заканчивает ввод, как только посетитель введёт пустую строку, не число или нажмёт «Отмена».
    numbers.push(+enter);//и сохраняет их в массиве.
    enter = prompt("Enter value");// Запрашивает по очереди значения при помощи prompt
}
var sum = 0;// При этом ноль 0 не должен заканчивать ввод, это разрешённое число.
for (var i = 0; i < numbers.length; i++) {
    sum += numbers[i];//Выводит сумму всех значений массива когда ввод прекращен
}
alert( sum );

// 5 задание
// Последовательность чисел Фибоначчи вычисляется по формуле формулу F(n) = F(n-1) + F(n-2).
// В ней каждое следующее число вычисляется как сумма двух предыдущих. Первые два числа равны 1 и 1.
// Напишите функцию fib(n), которая возвращает n-е число Фибоначчи.
//     Например:


function fib(n) {
    var a = 0,//первое число 1 на нулевой позиции
        b = 1;// второе число 1
    for (var i = 2; i <= n; i++) {
        var c = a + b;//каждое следующее число вычисляется как сумма двух предыдущих
        a = b;//передаем значения для продолжения цикла
        b = c;//передаем значения для продолжения цикла
    }
    return b;
}
 console.log(fib(3)); //2
 console.log(fib(7)); //13
 console.log(fib(77)); //5527939700884757



// 6 задание
// Напишите функцию, которая принимает на вход строку и возвращает ее неизменной если ее длина не превышает 20 символов.
// Если длинна больше 20, то обрезает строку и добавляет в конец строки '...'
function enterValue (short) {
    short = prompt("Enter value");//  принимает на вход строку
    if (short.length <= 20) {
        alert (short);//возвращает ее неизменной если ее длина не превышает 20 символов.
    }else {
        var long = short.slice(0,20) + "...";// Если длинна больше 20, то обрезает строку и добавляет в конец строки '...'
        alert(long);
    }
}
enterValue();

// 7 задание
// Напиште код который выведет сотрудника который выполнил больше всех задач.
//     Например:
var tasksCompleted = {
    'Anna': 29,
    'Serg': 35,
    'Elena': 1,
    'Anton': 99
};

var i = 0;
var maxName = "";
for (var name in tasksCompleted) {
    if (i < tasksCompleted[name]) {
        i = tasksCompleted[name];
        maxName = name;
    }
}

alert( maxName || "пусто" );//'Anton'
